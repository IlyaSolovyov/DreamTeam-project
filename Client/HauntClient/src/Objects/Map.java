package Objects;

public class Map /* implements Appearence */ {

	private int[][] layer1; // слой для отрисовки пола
	private int[][] layer2; // слой для отрисовки препятствий
	private int[][] layer3; // слой для отрисовки разной мелочи (чашка на столе,
							// пятна, прочее)
	public final static int layerQUANTITY = 3; // количество слоев карты

	public Map() {
		layer1 = new int[][] { { 69, 69, 69, 73, 73, 73, 70, 70, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69 },
				{ 69, 73, 73, 73, 69, 370, 371, 371, 372, 73, 73, 73, 73, 71, 69, 73, 73, 73, 69, 69 },
				{ 69, 73, 69, 73, 71, 424, 425, 425, 426, 71, 73, 71, 71, 69, 71, 71, 71, 69, 69, 69 },
				{ 69, 69, 69, 71, 73, 71, 73, 73, 69, 73, 71, 71, 71, 69, 69, 69, 71, 71, 69, 69 },
				{ 69, 69, 71, 71, 69, 69, 71, 69, 69, 73, 73, 69, 373, 374, 375, 69, 69, 69, 71, 71 },
				{ 69, 69, 71, 71, 69, 71, 69, 71, 73, 71, 69, 69, 400, 401, 402, 73, 73, 73, 71, 71 },
				{ 69, 69, 71, 69, 69, 73, 69, 71, 69, 69, 71, 71, 427, 428, 429, 71, 69, 73, 69, 69 },
				{ 69, 73, 73, 73, 69, 71, 73, 69, 69, 73, 69, 69, 71, 73, 71, 69, 71, 69, 73, 71 },
				{ 69, 343, 344, 345, 71, 71, 71, 71, 71, 71, 71, 71, 71, 69, 69, 73, 71, 73, 73, 69 },
				{ 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 71, 71, 71, 71, 71, 73, 73, 69 } };

		layer2 = new int[][] {
				{ 142, 111, 111, 114, 464, 196, 469, 469, 196, 464, 109, 111, 111, 111, 111, 111, 111, 111, 111, 114 },
				{ 491, 000, 000, 000, 000, 000, 000, 000, 000, 000, 115, 000, 000, 000, 000, 000, 000, 000, 000, 492 },
				{ 141, 000, 196, 000, 134, 000, 000, 000, 000, 000, 000, 000, 159, 160, 000, 141, 000, 506, 000, 492 },
				{ 115, 000, 000, 000, 197, 134, 000, 000, 000, 197, 000, 000, 000, 000, 000, 138, 000, 000, 000, 141 },
				{ 491, 000, 000, 000, 000, 000, 000, 506, 000, 000, 000, 000, 000, 529, 000, 136, 114, 000, 142, 137 },
				{ 141, 000, 000, 000, 141, 000, 000, 000, 000, 141, 000, 453, 454, 455, 000, 000, 000, 000, 000, 492 },
				{ 139, 114, 000, 142, 137, 450, 000, 000, 450, 138, 000, 000, 529, 000, 000, 141, 000, 48, 000, 196 },
				{ 115, 000, 000, 506, 000, 000, 000, 000, 000, 115, 000, 000, 000, 000, 000, 138, 000, 102, 000, 492 },
				{ 491, 000, 000, 000, 000, 000, 453, 455, 000, 000, 000, 141, 501, 502, 503, 138, 000, 000, 000, 492 }, 
				{ 142, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 113, 111, 111, 111, 113, 111, 111, 111, 114 } };

		layer3 = new int[][] { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 320, 0, 0, 293, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 480, 482, 0, 0, 0, 241, 0, 0 },
				{ 0, 320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 318, 318, 215, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 320, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 264, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 264, 0 },
				{ 0, 291, 0, 0, 0, 0, 532, 533, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
	}

	/**
	 * Проверка наличия плитки на карте
	 */
	public boolean hasTile(int x, int y, int layer) {
		return (x >= 0 && y >= 0 && y < getHeight(layer) && x < getWidth(layer));
	}

	/**
	 * Количество плиток на карте по ширине
	 */
	public int getWidth(int layer) {
		if (layer == 1) {
			return layer1[0].length;
		} else if (layer == 2) {
			return layer2[0].length;
		} else {
			return layer3[0].length;
		}
	}

	/**
	 * Количество плиток на карте по высоте
	 */
	public int getHeight(int layer) {
		if (layer == 1) {
			return layer1.length;
		} else if (layer == 2) {
			return layer2.length;
		} else {
			return layer3.length;
		}
	}

	public int getTileId(int x, int y, int layer) {
		if (layer == 1) {
			return hasTile(x, y, layer) ? layer1[y][x] : 0;
		} else if (layer == 2) {
			return hasTile(x, y, layer) ? layer2[y][x] : 0;
		} else if (layer == 3) {
			return hasTile(x, y, layer) ? layer3[y][x] : 0;
		} else {
			return 0;
		}
	}

	public void drawMap() {
		for (int i = 0; i < 9; i++) {
			// drawObject();
		}

	}

}
